#!/bin/sh

LIST="4jets                          
      6jets                          
      default                        
      electrons                      
      jetOverlap                     
      looseSelection                 
      minSumDist                     
      minSumDist_rejectOutliers       
      ptOrderedMinDist                
      ptOrderedMinDist_rejectOutliers 
      tauola                          
      tightSelection                  
      totalMinDist                    
      totalMinDist_rejectOutliers"    

for NAME in $LIST
  do
  crab -status   -c crab_JetCombMVATrainTree_$NAME
  crab -get 1-40 -c crab_JetCombMVATrainTree_$NAME
done

DIR="JetCombMVAStudy_save"
if [ ! -d $DIR ]
    then
    mkdir $DIR
fi

for NAME in $LIST
  do
  echo "========================================"
  echo "Calculating JPM efficiency for $NAME..."
  effFile="crab_JetCombMVATrainTree_$NAME/res/effJPM.txt"
  rejTot=0
  accTot=0
  if [ -e $effFile ]
      then
      rm -f $effFile
  fi
  echo "accepted   rejected   efficiency   error " >> $effFile
  echo "=========================================" >> $effFile
  for FILE in `ls crab_JetCombMVATrainTree_$NAME/res/CMSSW_*.stderr`
    do
    found=$(grep -c "passed to the trainer" $FILE)
    if [ $found != 0 ]
	then
	rej=$(grep "rejected due to bad jet-parton matching" $FILE | cut -c 45-52)
	acc=$(grep "accepted for training"                   $FILE | cut -c 45-52)
	eff=`echo ${acc}/\(${acc}+${rej}\)             | bc -l | perl -ne 'printf("%.4f \n",$_)'`
	effErr=`echo "sqrt($eff*(1-$eff)/($acc+$rej))" | bc -l | perl -ne 'printf("%.4f \n",$_)'`
	echo "$acc   $rej     $eff    $effErr" >> $effFile
	rejTot=`echo ${rejTot}+${rej} | bc -l`
	accTot=`echo ${accTot}+${acc} | bc -l`
    fi
  done
  echo "=========================================" >> $effFile
  effTot=`echo ${accTot}/\(${accTot}+${rejTot}\)                | bc -l | perl -ne 'printf("%.4f \n",$_)'`
  effTotErr=`echo "sqrt($effTot*(1-$effTot)/($accTot+$rejTot))" | bc -l | perl -ne 'printf("%.4f \n",$_)' `
  echo "   $accTot      $rejTot     $effTot    $effTotErr" >> $effFile
  echo "Result written into: $effFile"
  cp $effFile $DIR/effJPM.$NAME.txt
done

for NAME in $LIST
  do
  echo "========================================"
  hadd -f crab_JetCombMVATrainTree_$NAME/res/train_save.root crab_JetCombMVATrainTree_$NAME/res/train_save_*.root
  cp crab_JetCombMVATrainTree_$NAME/res/train_save.root $DIR/train_save.$NAME.root
done

for NAME in $LIST
  do
  echo "++++++++++++++++++++++++++++++++++++++++++++"
  echo "Running the mvaTreeTrainer for $NAME..."
  mvaTreeTrainer TopAnalysis/TopAnalyzer/data/SemiLepJetCombMVATrainer.xml $DIR/SemiLepJetComb_$NAME.mva $DIR/train_save.$NAME.root
  cp train_monitoring.root $DIR/train_monitoring.$NAME.root
  #echo "Running the mvaTreeTrainer for $NAME.rot"
  #mvaTreeTrainer TopAnalysis/TopAnalyzer/data/SemiLepJetCombMVATrainer_rot.xml $DIR/SemiLepJetComb_$NAME.rot.mva $DIR/train_save.$NAME.root
  #cp train_monitoring.root $DIR/train_monitoring.$NAME.rot.root
done
