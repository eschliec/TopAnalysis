# analyze muons
  module muonSample = analyzeMuon from "TopAnalysis/TopAnalyzer/data/MuonAnalyzer.cfi"
  module muonCutKin = analyzeMuon from "TopAnalysis/TopAnalyzer/data/MuonAnalyzer.cfi"

# analyze jets
  module jetSample  = analyzeJets from "TopAnalysis/TopAnalyzer/data/JetAnalyzer.cfi"
  module jetCutKin  = analyzeJets from "TopAnalysis/TopAnalyzer/data/JetAnalyzer.cfi"

# plots to be monitored
  replace muonSample.input           = allLayer1Muons
  replace muonSample.id              = false
  replace muonSample.kinematics      = true
  replace muonSample.resolution      = false

  replace muonCutKin.input           = selectedLayer1Muons
  replace muonCutKin.id              = true
  replace muonCutKin.kinematics      = true
  replace muonCutKin.resolution      = true

  replace jetSample.input            = selectedLayer1Jets
  replace jetSample.id               = false
  replace jetSample.kinematics       = true
  replace jetSample.resolution       = false

  replace jetCutKin.input            = selectedLayer1Jets
  replace jetCutKin.id               = false
  replace jetCutKin.kinematics       = true
  replace jetCutKin.resolution       = false

# filter semileptonic events with muons
  include "TopAnalysis/TopFilter/test/semiLeptonicPreSelection_muon.cff"

  include "TopAnalysis/TopFilter/data/CaloJetPtEventFilter.cfi"
  include "TopAnalysis/TopFilter/data/CaloJetEtaEventFilter.cfi"
  include "TopAnalysis/TopFilter/data/MuonPtEventFilter.cfi"
  include "TopAnalysis/TopFilter/data/MuonEtaEventFilter.cfi"

#
  sequence muonKinematic = {muonSample, filterMuonEta, filterMuonPt, muonCutKin}
  sequence muonSelection = {muonKinematic}
  sequence jetKinematic  = {jetSample, filterJetEta, filterJetPt, jetCutKin}
  sequence jetSelection  = {jetKinematic}
