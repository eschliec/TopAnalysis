process Test = 
{
# configuer MessageLogger
  include "FWCore/MessageLogger/data/MessageLogger.cfi"
  replace MessageLogger.cerr.threshold = "INFO"
  //service = MessageLogger {untracked vstring categories = { "Test" }}

 # input file(s)
  source = PoolSource {
    untracked vstring fileNames = {
      "file: USE A CSA07 CHowder SAMPLE"
    }
  }
  untracked PSet maxEvents = {untracked int32 input = -1}

 include "TopAnalysis/Configuration/test/csa07AllEventsSkim_Ttbar.cff"

  ## std sequence for ttGenEvent
  include "TopQuarkAnalysis/TopEventProducers/data/TtGenEvtProducer.cff"

## configure ttDecaySelection
 # include "TopQuarkAnalysis/TopEventProducers/data/TtSemiNumLeptonFilter.cff"

## configure mva trainer
  include "TopQuarkAnalysis/TopEventSelection/data/TtSemiLepSignalSelMVAComputer_Muons.cff"

#cuts
  include "TopAnalysis/TopFilter/data/semiLepMuonSelection_fin.cff"
  
  replace SemiJetsPtCut.minPt = {20,20,20,20}
  replace SemiMuonPtCut.minPt = {20}
  #muon within tracker acceptance
  replace SemiMuonEtaCut.minEta = {-2.1}
  replace SemiMuonEtaCut.maxEta = {2.1}
 include "TopAnalysis/TopUtils/data/EventWeight.cfi"
 replace csa07Event.overallLumi = 50
 
 path p1 = {makeWeights & makeGenEvt}  
  path p2 = {findTtSemiLepSignalSelMVA}

  # define the event content
  block myEventContent = {
    untracked vstring outputCommands = {
      "drop *"
      ,"keep double_*_DiscSel_*"
    }
  }
  
  # the actual output module
  module out = PoolOutputModule {
    untracked string fileName = "Lkh_output"
    using myEventContent
    untracked bool verbose = false
  }

  endpath outpath = { out }
}
